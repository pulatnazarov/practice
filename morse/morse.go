package morse

import (
	"fmt"
	"strings"
)

func Morse() {
	morse := make(map[string]string)
	morse = map[string]string{
		"A": ".-",
		"B": "-...",
		"C": "-.-.",
		"D": "-..",
		"E": ".",
		"F": "..-.",
		"G": "--.",
		"H": "....",
		"I": "..",
		"J": ".---",
		"K": "-.-",
		"L": ".-..",
		"M": "--",
		"N": "-.",
		"O": "---",
		"P": ".--.",
		"Q": "--.-",
		"R": ".-.",
		"S": "...",
		"T": "-",
		"U": "..-",
		"V": "...-",
		"W": ".--",
		"X": "-..-",
		"Y": "-.--",
		"Z": "--..",
		"0": "-----",
		"1": ".----",
		"2": "..---",
		"3": "...--",
		"4": "....-",
		"5": ".....",
		"6": "-....",
		"7": "--...",
		"8": "---..",
		"9": "----.",
		".": ".-.-.-",
		",": "--..--",
		"?": "..--..",
		"!": "-.-.--",
		"-": "-....-",
		"/": "-..-.",
		"@": ".--.-.",
		"(": "-.--.",
		")": "-.--.-",
		" ": "/",
		"a": ".-",
		"b": "-...",
		"c": "-.-.",
		"d": "-..",
		"e": ".",
		"f": "..-.",
		"g": "--.",
		"h": "....",
		"i": "..",
		"j": ".---",
		"k": "-.-",
		"l": ".-..",
		"m": "--",
		"n": "-.",
		"o": "---",
		"p": ".--.",
		"q": "--.-",
		"r": ".-.",
		"s": "...",
		"t": "-",
		"u": "..-",
		"v": "...-",
		"w": ".--",
		"x": "-..-",
		"y": "-.--",
		"z": "--..",
	}
	str := "i am morse code find me bro!"

	for _, char := range str {
		fmt.Print(morse[string(char)], " ")
	}

	fmt.Println("\nanti morse:")

	morseStr := ".. / .- -- / -- --- .-. ... . / -.-. --- -.. . / ..-. .. -. -.. / -- . / -... .-. --- -.-.--"

	strs := strings.Split(morseStr, " ")
	for _, str = range strs {
		for key, value := range morse {
			if value == str {
				fmt.Print(strings.ToLower(key))
				break
			}
		}
	}

	fmt.Println()
}
